- summary: |
    Проверка успешной авторизации
  requirement: |
    Пользователь может авторизоваться через электронную почту
  prerequisites: |
    empty
  test-data: |
    Email = tester2024@test.ru Password = password100500
  steps: 
    - Нажать на кнопку "Sign in"
    - Ввести Email
    - Ввести Password
    - Нажать "Submit"
  expected-result: |
    Пользователь успешно авторизован


- summary: |
    Проверка авторизации через Github
  requirement: |
    Пользователь может авторизоваться с помощью Github
  prerequisites: |
    Созданный аккаунт Github
  test-data: |
    empty
  steps: 
    - Нажать на кнопку Sign up
    - Нажать кнопку "Sign in with Github"
  expected-result: |
    Пользователь успешно авторизован


- summary: |
    Проверка авторизации через Discord
  requirement: |
    Пользователь может авторизоваться через Discord
  prerequisites: |
    Созданный аккаунт Discord
  test-data: |
    empty
  steps: 
    - Нажать на кнопку Sign up
    - Нажать кнопку "Sign in with Discord"
  expected-result: |
    Пользователь успешно авторизован


- summary: |
    Проверка создания игры без регистрации
  requirement: |
    Неавторизованный пользователь может запустить пробную игру
  prerequisites: |
    Пользователь не авторизован
  test-data: |
    empty
  steps: 
    - На главной странице нажать на кнопку "Try simple battle"
  expected-result: |
    Игра без регистрации успешно создана


- summary: |
    Проверка, сортировки таблицы рейтинга
  requirement: |
    Пользователь может отсортировать пользователей по Rank, Rating, Games Played, Joined в таблице рейтинга
  prerequisites: |
    Пользователь авторизован
  test-data: |
    empty
  steps: 
    - Перейти на страницу со списком пользователей
    - Выбрать любой раздел, например, monthly
    - Отсортировать по любому полю, например, rating, по возрастанию
  expected-result: |
    Пользователи сортируются по указанному полю по возрастанию


- summary: |
    Проверка выбора языка в активной игре
  requirement: |
    Пользователь может выбрать язык для решения задачи в игре
  prerequisites: |
    empty
  test-data: |
    empty
  steps: 
    - Создать игру, например, с ботом
    - В игре в дроп-меню выбрать любой язык, например, Python 
  expected-result: |
    Язык сменился на выбранный


- summary: |
    Проверка возможности сдаться в игре
  requirement: |
    Пользователь может сдаться в игре
  prerequisites: |
    empty
  test-data: |
    empty
  steps: 
    - Создать любую игру, например, с ботом
    - В игровом окне нажать на красной флажок "Give up"
    - В модальном окне подтвердить действие, нажав на красную кнопку Give up
    - В новом модальном окне 'If you read this you've lost the game' нажать на кнопку "I'll be back"
  expected-result: |
    Пользователь проиграл


- summary: |
    Проверка, создания игры с ботом
  requirement: |
    Авторизованный пользователь может создать игру с ботом
  prerequisites: |
    Пользователь авторизовался в системе
  test-data: |
    empty
  steps: 
    - На главной странице нажать на кнопку "Create a game"
    - Указать в Game Type "With a bot"
    - Задать желаемые для игры параметры
    - Нажать на кнопку "Create battle"
  expected-result: |
    Игра с ботом успешно создана


- summary: |
    Проверка создания игры с другим пользоватеелм
  requirement: |
    Пользователь может присоединиться к игре по приглашению другого игрока
  prerequisites: |
    Пользователь 1 авторизован под email.
    Пользователь 2 авторизован под email tester2024@test.ru/password100500
  test-data: |
    Level: 1 звезда
    Time Control: 8 min
    Choose task by name or tags: random  task
  steps: 
    - Нажать на кнопку "Create game" под Пользователем 1
    - Выбрать любой Game Type, например, "With a friend"
    - Выбрать в качестве оппонента Пользователя 2.
    - Задать данные игры из тестовых данных
    - Нажать на кнопку "Create invite"
    - На аккаунте Пользователя 2 нажать на иконку "Invites"
    - Принять приглашение пользователя
  expected-result: |
    Игра с другим пользователем успешно создана


- summary: |
    Проверка возможного исхода игры, как ничья
  requirement: |
    В игре возможна ничья 
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте.
  test-data: |
    no data
  steps:
    - Создать игру с ботом, установив время игры 3 минуты
    - Ждать 3 минуты ничего не делая
  expected-result: |
    Сайт сообщает пользователю, что время вышло и в игре нет победителя    


- summary: |
    Проверка наличия в игре обучающего гайда
  requirement: |
    Пользователь может посмотреть обучающий гайд по основным функциям в игре
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте и создал игру с ботом
  test-data: |
    кнопка - "Show guide"
  steps:
    - Нажать на кнопку "Show guide"
  expected-result: |
    Сайт запустить обучающий гайд по основным функциям в игре


- summary: |
    Проверка возможности поменять тему консоли
  requirement: |
    Пользователь поменять фон у консоли
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте и создал игру с ботом
  test-data: |
    кнопка - "Dark"
  steps:
    - Нажать на кнопку "Dark"
  expected-result: |
    Фон у консоли сменился с белого на черный


- summary: |
    Проверка возможности вывести описание задания игры в центр экрана
  requirement: |
    Пользователь может вывести описание задания игры в центр экрана
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте и создал игру с ботом
  test-data: |
    no data
  steps:
    - Нажать на кнопку с квадратной скобкой
  expected-result: |
    Сайт поместит описания задания игры в центр экрана


- summary: |
    Проверка наличия рабочей ссылки на телеграмм-канал кодбатла
  requirement: |
    Пользователь может пройти на по ссылке на телеграмм-канал кодбатла
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте. У пользователя есть аккаунт telegram
  test-data: |
    Кнопка - "Tg#Codebattle"
  steps:
    - Нажимаем на свой Ник
    - В сплывающем списке нажимаем на кнопку "Tg#Codebattle"
  expected-result: |
    Сайт перенаправит нас в канал в телеграмме 


- summary: |
    Проверка смены языка в описании задания
  requirement: |
    При смене языка сайт показывает нам задание на выбраном языке
  prerequisites: |
    Авторизованный пользователь создал игру с ботом
  test-data: |
    no data
  steps:
    - Нажимаем на кнопку EN
    - В всплывающем списке выбираем RU
  expected-result: |
    Задание перевелось на русский язык


- summary: |
    Проверка выбора языка программирования
  requirement: |
    В игре пользователь может выбрать язык программирования удобный для него
  prerequisites: |
    Авторизованный пользователь создал игру с ботом
  test-data: |
    Язык программирования - Java
  steps:
    - Под описанием задания нажимаем на выспылающий список языков
    - В всплывающем списке выбираем Java
  expected-result: |
    Язык выполнения задания сменился на Java


- summary: |
    Проверка возможности запустить проверку решения в игре
  requirement: |
    Пользователь может проверить своё решение в игре
  prerequisites: |
    Авторизованный пользователь создал игру с ботом
  test-data: |
    Текст = "AAAAAA"
    Кнопка = "Run"
  steps:
    - Ввести в консоль текст "AAAAAA"
    - Нажать на кнопку "Run"
  expected-result: |
    Сайт произведет проверку написанного, пользователем кода


- summary: |
    Проверка чата в игре
  requirement: |
    Пользователь может писать в чат игры во время игры 
  prerequisites: |
    Авторизованный пользователь создал игру с ботом
  test-data: |
    Текст = "Привет бот"
    Кнопка = "Send"
  steps:
    - Ввести в поле для чата текст "Привет бот"
    - Нажать на кнопку "Send"
  expected-result: |
    Сообщение "Привет бот" появится в чате игры


- summary: |
    Проверка возможности установить таймер в игре
  requirement: |
    Пользователь может при создании игры установить таймер
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    no data
  steps:
    - Нажать кнопку "Create a game"
    - Нажать кнопку "With a bot"
    - В Time control выбрать максимальное кол-во минут 60
    - Нажать Create battle
  expected-result: |
    Игра создалась с таймером в 60 минут


- summary: |
    Проверка возможности выбрать задание
  requirement: |
    Пользователь может выбрать задание по сложности
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    Игра = "baudot_code"
  steps:
    - Нажать кнопку "Create a game"
    - В Level нажать на 4 звезды
    - В Game type нажать "With a bot"
    - В Choose task by name or tags нажать и в выпадающем списке выбрать "baudot_code"
    - Нажать Create battle
  expected-result: |
    Сайт создал игру с названием baudot_code


- summary: |
    Проверка сброса пароля
  requirement: |
    Сайт дает возможность сбросить пароль 
  prerequisites: |
    У пользователя есть зарегистрированный аккаунт на сайте. В браузере открыта страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - Жмем на кнопку "Sing in"
    - Жмем на кнопку Forgot your password?
    - Вводим Email, который был указан при регистрации
    - Проверяем наличие письма на почте
  expected-result: |
    Сайт даёт возможность сбросить пароль 


- summary: |
    Проверка возможности зарегистрироваться
  requirement: |
    При корректном вводе всех полей - сайт регистрирует пользователя
  prerequisites: |
    В браузере открыта страница https://codebattle.hexlet.io/
  test-data: |
    Nickname = Любые 6 повторяющихся букв латинского алфавита
    Email = любые буквы латинкского алфавита по шаблону - "%@%.%"
    Password = Любые 6 повторяющихся букв латинского алфавита
    Password Confirmation = Любые 6 повторяющихся букв латинского алфавита
  steps:
    - Жмем на кнопку "Sing up"
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Жмем на кнопку "Submit"
  expected-result: |
    При корректном вводе всех полей - сайт регистрирует пользователя

- summary: |
    Проверка возможности войти на сайт зарегистрированному пользователю
  requirement: |
    Сайт даёт возможность входа зарегистрированному пользователю
  prerequisites: |
    В браузере открыта страница https://codebattle.hexlet.io/
  test-data: |
    Email = Aaa@aa.aa
    Password = aaaaaa
  steps:
    - Жмем на кнопку "Sing in"
    - Вводим Email
    - Вводим Password
    - Жмем на кнопку "Submit"
  expected-result: |
    Сайт даёт возможность входа зарегистрированному пользователю

- summary: |
    Проверка возможности создания игры
  requirement: |
    Пользователь может создать игру
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    no data
  steps:
    - Жмем на кнопку "Create a game"
    - Жмем на кнопку "Create battle"
  expected-result: |
    Пользователь может создать игру

- summary: |
    Проверка возможности присоединится к игре как оппонент
  requirement: |
    Пользователь может присоединится к чужой игре как оппонент
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    no data
  steps:
    - Под столбцом "Actions" Жмем на кнопку красную кнопку "Fight"
  expected-result: |
    Пользователь может присоединится к чужой игре как оппонент

- summary: |
    Проверка возможности присоединится к игре как зритель
  requirement: |
    Пользователь может присоединится к чужой игре как зритель
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    no data
  steps:
    - Под столбцом "Actions" Жмем на кнопку синюю кнопку "Show"
  expected-result: |
    Пользователь может присоединится к чужой игре как зритель

- summary: |
    Проверка работы чата
  requirement: |
    Пользователь может писать сообщения в общий чат
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    Текст = "Привет всем :-)"
  steps:
    - В поле для текста вводим сообщение "Привет всем :-)"
    - Нажимаем кнопку "Send"
  expected-result: |
    Пользователь может писать сообщения в общий чат

- summary: |
    Проверка отображения личной статистики пользователя
  requirement: |
    Пользователь может видеть личную статистику по проведенным играм
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте и закончил 2 игры с любым результатом
  test-data: |
    Кнопка = "My profile"
  steps:
    - Нажимаем на название своего ника
    - Нажимаем кнопку "My profile"
  expected-result: |
    Пользователь может видеть личную статистику по проведенным играм

- summary: |
    Проверка возможности сбросить своё решение в игре
  requirement: |
    Пользователь может полностью сбросить своё решение до стартогового состояния
  prerequisites: |
    Авторизованный пользователь создал игру с ботом
  test-data: |
    Текст = "AAAAAA" 
    Кнопка = "Reset solution"
  steps:
    - Ввести в консоль текст "AAAAAA" 
    - Нажать кнопку, с синими стрелками, "Reset solution"
  expected-result: |
    Пользователь может полностью сбросить своё решение до стартогового состояния

- summary: |
    Проверка наличия рейтинга всех игроков
  requirement: |
    Пользователь может посмотреть рейтинг всех игроков на сайте
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте
  test-data: |
    Гиперссылка - "Top list"
  steps:
    - Под кнопкой "Create batle" и списком других пользователей нажимаем на гиперссылку "Top list"
  expected-result: |
    Сайт покажет нам общий рейтинг всех пользователей 

- summary: |
    Проверка возможности выйграть в игре с ботом
  requirement: |
    Пользователь может выйграть игру при наличии правильного решения
  prerequisites: |
    Пользователь авторизовался под своим аккаунтом на сайте и создал игру "rect_area" с ботом. Язык программирования - Node.js
  test-data: |
    no data
  steps:
    - В консоли вместо слов "return 0;" добавляем "return width * length;"
    - Жмем кнопку Run
  expected-result: |
    Сайт сообщает пользователю, что он выйграл игру 

- summary: |
    Проверка сценария победы в игре
  requirement: |
    При верном выполнении задания высвечивается окно победы
  prerequisites: |
    Открыто окно создания игры
  test-data: |
    Level: 1
    Game type: With bot
    Task: rect area
  steps:
    - Вводим нужные данные 
    - Создаем игру
    - Выполняем выбранное задание
  expected-result: |
    Пользователю высвечивается окно с надписью "Woohoo, you're Champion!!!!!"

- summary: |
    Проверка просмотра записи завершенной игры
  requirement: |
    пользователь должен иметь возможность просматривать историю завершенных игр
  prerequisites: |
    Пользователь авторизован и находится на основной странице
  test-data: |
    no data
  steps:
    -   открыть вкладку Completed games 
    -   нажать на кнопку Show у любой завершенной игры
    -   в открывшейся вкладке прошедшей игры нажать на кнопку Play
  expected-result: |
    Проигрывается запись всей игры последовательно - действия обоих игроков в редакторе кода и появление сообщений в чате.
